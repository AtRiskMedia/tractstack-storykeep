---
import {
  getContentMap,
  getAllFileDatum,
  getStoryFragmentBySlug,
} from "../../api/turso";
import { cleanTursoFileDatum } from "../../utils/compositor/tursoFileDatum";
import StoryKeep from "@layouts/StoryKeep.astro";
import { EditModal } from "@components/storykeep/EditModal";
import { StoryFragment } from "@components/storykeep/StoryFragment";
import { StoryKeepStore } from "@components/storykeep/StoryKeepStore";
import { StoryKeepHeader } from "@components/storykeep/StoryKeepHeader";
import CreateNewPage from "@components/storykeep/components/CreateNewPage";
import { pageDesigns } from "../../assets/paneDesigns";
import type { AuthStatus, ContentMap } from "../../types";

const user = Astro.locals.user as AuthStatus;
const { slug } = Astro.params;
const isCreateNew = slug === "create";

if (!slug) return Astro.redirect("/404");

const baseUrl = new URL(Astro.url.pathname, Astro.site);
const canonicalURL = new URL(`/${slug}`, baseUrl).href;

const filesRaw = await getAllFileDatum();
const files = cleanTursoFileDatum(filesRaw);

let storyfragment;
if (!isCreateNew) {
  storyfragment = await getStoryFragmentBySlug(slug);
  if (!storyfragment) {
    return Astro.redirect("/404");
  }
}

const contentMap: ContentMap[] = await getContentMap();
---

<StoryKeep
  title={isCreateNew ? "Create New Page" : storyfragment.title}
  pubDatetime={isCreateNew ? new Date() : storyfragment.created}
  modDatetime={isCreateNew ? null : storyfragment.changed}
  ogImage={isCreateNew ? null : storyfragment.socialImagePath}
  canonicalURL={canonicalURL}
>
  {
    isCreateNew ? (
      <CreateNewPage
        mode="storyfragment"
        pageDesigns={pageDesigns}
        client:load
      />
    ) : (
      <>
        <StoryKeepStore client:only="react" storyfragment={storyfragment} />
        <header
          class="z-10 bg-mywhite shadow-inner px-4 flex justify-between items-center w-full"
          id="main-header"
        >
          <StoryKeepHeader
            client:only="react"
            id={storyfragment.id}
            slug={storyfragment.slug}
            isContext={false}
            contentMap={contentMap}
            user={user}
          />
        </header>

        <div id="storykeep" class="bg-white overflow-auto mx-auto w-full">
          <main id="website-content" class="overflow-auto w-full">
            <StoryFragment
              id={storyfragment.id}
              slug={storyfragment.slug}
              isContext={false}
              client:only="react"
            />
          </main>
        </div>

        <EditModal
          client:only="react"
          id={storyfragment.id}
          files={files}
          contentMap={contentMap}
        />
      </>
    )
  }

  <script>
    import { initStoryKeep } from "../../utils/storykeep";

    document.addEventListener("DOMContentLoaded", () => {
      initStoryKeep();
    });
  </script>
</StoryKeep>
