import { colorValues } from "./tailwindColors";
type TailwindClassValue = string[] | "number";

interface TailwindClassDefinition {
  values: TailwindClassValue;
  group: string;
  title: string;
  className: string;
}

type TailwindClasses = {
  [key: string]: TailwindClassDefinition;
};

export const tailwindClasses: TailwindClasses = {
  w: {
    values: "number",
    group: "Layout",
    title: "Width",
    className: "w",
  },
  h: {
    values: "number",
    group: "Layout",
    title: "Height",
    className: "h",
  },
  textCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "Typography",
    title: "Text Color",
    className: "text",
  },
  textALIGN: {
    values: ["center", "left", "right", "justify", "start", "end"],
    group: "Typography",
    title: "Text Align",
    className: "text",
  },
  textSIZE: {
    values: [
      "xs",
      "sm",
      "base",
      "lg",
      "xl",
      "2xl",
      "3xl",
      "4xl",
      "5xl",
      "6xl",
      "7xl",
      "8xl",
      "9xl",
    ],
    group: "Typography",
    title: "Text Size",
    className: "text",
  },
  fontFACE: {
    values: ["action", "main"],
    group: "Typography",
    title: "Font Face",
    className: "font",
  },
  fontSTYLE: {
    values: ["normal", "bold"],
    group: "Typography",
    title: "Font Style",
    className: "font",
  },
  bgCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "Backgrounds",
    title: "Background Color",
    className: "bg",
  },
  border: {
    values: ["true", "false"],
    group: "Borders",
    title: "Border",
    className: "border",
  },
  borderSTYLE: {
    values: ["solid", "dashed", "dotted", "double", "hidden", "none"],
    group: "Borders",
    title: "Border Style",
    className: "border",
  },
  borderSTROKE: {
    values: ["0", "2", "4", "8"],
    group: "Borders",
    title: "Border Stroke Size",
    className: "border",
  },
  borderCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "Borders",
    title: "Border Color",
    className: "border",
  },
  display: {
    values: [
      "block",
      "inline-block",
      "inline",
      "flex",
      "inline-flex",
      "table",
      "inline-table",
      "table-caption",
      "table-cell",
      "table-column",
      "table-column-group",
      "table-footer-group",
      "table-header-group",
      "table-row-group",
      "table-row",
      "flow-root",
      "grid",
      "inline-grid",
      "contents",
      "list-item",
      "hidden",
    ],
    group: "Layout",
    title: "Display",
    className: "display",
  },
  whitespace: {
    values: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"],
    group: "Typography",
    title: "Whitespace",
    className: "whitespace",
  },
  strokeSIZE: {
    values: "number",
    group: "SVG",
    title: "Stroke Size",
    className: "stroke",
  },
  stroke: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "SVG",
    title: "Stroke",
    className: "stroke",
  },
  strokeCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "SVG",
    title: "Stroke Color",
    className: "stroke",
  },
  justifyCONTENT: {
    values: [
      "normal",
      "start",
      "end",
      "center",
      "between",
      "around",
      "evenly",
      "stretch",
    ],
    group: "Layout",
    title: "Justify Content",
    className: "justify",
  },
  alignITEMS: {
    values: ["start", "end", "center", "baseline", "stretch"],
    group: "Layout",
    title: "Align Items",
    className: "items",
  },
  fill: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "SVG",
    title: "Fill",
    className: "fill",
  },
  fillCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "SVG",
    title: "Fill Color",
    className: "fill",
  },
  //flex: {
  //  values: ["true", "false"],
  //  group: "Layout",
  //  title: "Flex",
  //  className: "flex",
  //},
  flexWRAP: {
    values: ["wrap", "wrap-reverse", "nowrap"],
    group: "Layout",
    title: "Flex Wrap",
    className: "flex",
  },
  gap: {
    values: "number",
    group: "Layout",
    title: "Gap",
    className: "gap",
  },
  gapX: {
    values: "number",
    group: "Layout",
    title: "Gap X",
    className: "gap-x",
  },
  gapY: {
    values: "number",
    group: "Layout",
    title: "Gap Y",
    className: "gap-y",
  },
  m: {
    values: "number",
    group: "Spacing",
    title: "Margin",
    className: "m",
  },
  mt: {
    values: "number",
    group: "Spacing",
    title: "Margin Top",
    className: "mt",
  },
  ml: {
    values: "number",
    group: "Spacing",
    title: "Margin Left",
    className: "ml",
  },
  mr: {
    values: "number",
    group: "Spacing",
    title: "Margin Right",
    className: "mr",
  },
  mb: {
    values: "number",
    group: "Spacing",
    title: "Margin Bottom",
    className: "mb",
  },
  my: {
    values: "number",
    group: "Spacing",
    title: "Margin Y",
    className: "my",
  },
  mx: {
    values: "number",
    group: "Spacing",
    title: "Margin X",
    className: "mx",
  },
  p: {
    values: "number",
    group: "Spacing",
    title: "Padding",
    className: "p",
  },
  pt: {
    values: "number",
    group: "Spacing",
    title: "Padding Top",
    className: "pt",
  },
  pl: {
    values: "number",
    group: "Spacing",
    title: "Padding Left",
    className: "pl",
  },
  pr: {
    values: "number",
    group: "Spacing",
    title: "Padding Right",
    className: "pr",
  },
  pb: {
    values: "number",
    group: "Spacing",
    title: "Padding Bottom",
    className: "pb",
  },
  py: {
    values: "number",
    group: "Spacing",
    title: "Padding Y",
    className: "py",
  },
  px: {
    values: "number",
    group: "Spacing",
    title: "Padding X",
    className: "px",
  },
  maxW: {
    values: "number",
    group: "Layout",
    title: "Max Width",
    className: "max-w",
  },
  maxH: {
    values: "number",
    group: "Layout",
    title: "Max Height",
    className: "max-h",
  },
  rotate: {
    values: "number",
    group: "Transforms",
    title: "Rotate",
    className: "rotate",
  },
  rounded: {
    values: ["none", "sm", "md", "lg", "xl", "2xl", "3xl", "full"],
    group: "Borders",
    title: "Rounded",
    className: "rounded",
  },
  leading: {
    values: [
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "none",
      "tight",
      "snug",
      "normal",
      "relaxed",
      "loose",
    ],
    group: "Typography",
    title: "Leading - Line Height",
    className: "leading",
  },
  z: {
    values: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
    group: "Layout",
    title: "Z Index",
    className: "z",
  },
  //relative: {
  //  values: ["true", "false"],
  //  group: "Layout",
  //  title: "Relative",
  //  className: "relative",
  //},
  underline: {
    values: ["true", "false"],
    group: "Typography",
    title: "Underline",
    className: "underline",
  },
  underlineSTYLE: {
    values: ["solid", "double", "dotted", "dashed", "wavy"],
    group: "Typography",
    title: "Underline Style",
    className: "underline",
  },
  animate: {
    values: ["fadeInUp"],
    group: "Animation",
    title: "Animate",
    className: "animate",
  },
  overflow: {
    values: ["auto", "hidden", "visible", "scroll"],
    group: "Layout",
    title: "Overflow",
    className: "overflow",
  },
  shadow: {
    values: ["true", "false"],
    group: "Effects",
    title: "Shadow",
    className: "shadow",
  },
  shadowSIZE: {
    values: ["sm", "md", "lg", "xl", "2xl", "inner", "none"],
    group: "Effects",
    title: "Shadow Size",
    className: "shadow",
  },
  position: {
    values: ["static", "fixed", "absolute", "relative", "sticky"],
    group: "Layout",
    title: "Position",
    className: "position",
  },
  inset: {
    values: "number",
    group: "Layout",
    title: "Inset",
    className: "inset",
  },
  top: {
    values: "number",
    group: "Layout",
    title: "Top",
    className: "top",
  },
  right: {
    values: "number",
    group: "Layout",
    title: "Right",
    className: "right",
  },
  bottom: {
    values: "number",
    group: "Layout",
    title: "Bottom",
    className: "bottom",
  },
  left: {
    values: "number",
    group: "Layout",
    title: "Left",
    className: "left",
  },
  objectFIT: {
    values: ["contain", "cover", "fill", "none", "scale-down"],
    group: "Layout",
    title: "Object Fit",
    className: "object",
  },
  opacity: {
    values: "number",
    group: "Effects",
    title: "Opacity",
    className: "opacity",
  },
  cursor: {
    values: [
      "auto",
      "default",
      "pointer",
      "wait",
      "text",
      "move",
      "not-allowed",
    ],
    group: "Interactivity",
    title: "Cursor",
    className: "cursor",
  },
  pointerEVENTS: {
    values: ["none", "auto"],
    group: "Interactivity",
    title: "Pointer Events",
    className: "pointer-events",
  },
  resize: {
    values: ["none", "y", "x", ""],
    group: "Interactivity",
    title: "Resize",
    className: "resize",
  },
  userSELECT: {
    values: ["none", "text", "all", "auto"],
    group: "Interactivity",
    title: "User Select",
    className: "select",
  },
  transitionPROPERTY: {
    values: ["none", "all", "colors", "opacity", "shadow", "transform"],
    group: "Transitions",
    title: "Transition Property",
    className: "transition",
  },
  transitionDURATION: {
    values: "number",
    group: "Transitions",
    title: "Transition Duration",
    className: "duration",
  },
  transitionTIMING: {
    values: ["linear", "in", "out", "in-out"],
    group: "Transitions",
    title: "Transition Timing",
    className: "ease",
  },
  scale: {
    values: "number",
    group: "Transforms",
    title: "Scale",
    className: "scale",
  },
  translate: {
    values: "number",
    group: "Transforms",
    title: "Translate",
    className: "translate",
  },
  skew: {
    values: "number",
    group: "Transforms",
    title: "Skew",
    className: "skew",
  },
  gridCOLS: {
    values: "number",
    group: "Grid",
    title: "Grid Template Columns",
    className: "grid-cols",
  },
  gridROWS: {
    values: "number",
    group: "Grid",
    title: "Grid Template Rows",
    className: "grid-rows",
  },
  gridCOLSPAN: {
    values: [
      "auto",
      "span-1",
      "span-2",
      "span-3",
      "span-4",
      "span-5",
      "span-6",
      "span-full",
    ],
    group: "Grid",
    title: "Grid Column Span",
    className: "col-span",
  },
  gridROWSPAN: {
    values: [
      "auto",
      "span-1",
      "span-2",
      "span-3",
      "span-4",
      "span-5",
      "span-6",
      "span-full",
    ],
    group: "Grid",
    title: "Grid Row Span",
    className: "row-span",
  },
  justifySELF: {
    values: ["auto", "start", "end", "center", "stretch"],
    group: "Flexbox Grid",
    title: "Justify Self",
    className: "justify-self",
  },
  alignSELF: {
    values: ["auto", "start", "end", "center", "stretch"],
    group: "Flexbox Grid",
    title: "Align Self",
    className: "align-self",
  },
  placeSELF: {
    values: ["auto", "start", "end", "center", "stretch"],
    group: "Flexbox Grid",
    title: "Place Self",
    className: "place-self",
  },
  order: {
    values: [
      "first",
      "last",
      "none",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9",
      "10",
      "11",
      "12",
    ],
    group: "Flexbox Grid",
    title: "Order",
    className: "order",
  },
  aspectRATIO: {
    values: ["auto", "square", "video"],
    group: "Layout",
    title: "Aspect Ratio",
    className: "aspect",
  },
  objectPOSITION: {
    values: [
      "bottom",
      "center",
      "left",
      "left-bottom",
      "left-top",
      "right",
      "right-bottom",
      "right-top",
      "top",
    ],
    group: "Layout",
    title: "Object Position",
    className: "object",
  },
  overscrollBEHAVIOR: {
    values: ["auto", "contain", "none"],
    group: "Layout",
    title: "Overscroll Behavior",
    className: "overscroll",
  },
  isolation: {
    values: ["isolate", "auto"],
    group: "Layout",
    title: "Isolation",
    className: "isolation",
  },
  backdropFILTER: {
    values: ["none", "blur"],
    group: "Effects",
    title: "Backdrop Filter",
    className: "backdrop",
  },
  mixBLENDMODE: {
    values: [
      "normal",
      "multiply",
      "screen",
      "overlay",
      "darken",
      "lighten",
      "color-dodge",
      "color-burn",
      "hard-light",
      "soft-light",
      "difference",
      "exclusion",
      "hue",
      "saturation",
      "color",
      "luminosity",
    ],
    group: "Effects",
    title: "Mix Blend Mode",
    className: "mix-blend",
  },
  fontVARIANTNUMERIC: {
    values: [
      "normal-nums",
      "ordinal",
      "slashed-zero",
      "lining-nums",
      "oldstyle-nums",
      "proportional-nums",
      "tabular-nums",
      "diagonal-fractions",
      "stacked-fractions",
    ],
    group: "Typography",
    title: "Font Variant Numeric",
    className: "font-variant-numeric",
  },
  listSTYLETYPE: {
    values: ["none", "disc", "decimal"],
    group: "Typography",
    title: "List Style Type",
    className: "list",
  },
  listSTYLEPOSITION: {
    values: ["inside", "outside"],
    group: "Typography",
    title: "List Style Position",
    className: "list",
  },
  placeholderCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "Typography",
    title: "Placeholder Color",
    className: "placeholder",
  },
  placeholderOPACITY: {
    values: "number",
    group: "Typography",
    title: "Placeholder Opacity",
    className: "placeholder-opacity",
  },
  textDECORATION: {
    values: ["underline", "overline", "line-through", "no-underline"],
    group: "Typography",
    title: "Text Decoration",
    className: "decoration",
  },
  textDECORATIONCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "Typography",
    title: "Text Decoration Color",
    className: "decoration",
  },
  textDECORATIONSTYLE: {
    values: ["solid", "double", "dotted", "dashed", "wavy"],
    group: "Typography",
    title: "Text Decoration Style",
    className: "decoration",
  },
  textDECORATIONTHICKNESS: {
    values: ["auto", "from-font", "0", "1", "2", "4", "8"],
    group: "Typography",
    title: "Text Decoration Thickness",
    className: "decoration",
  },
  textUNDERLINEOFFSET: {
    values: ["auto", "0", "1", "2", "4", "8"],
    group: "Typography",
    title: "Text Underline Offset",
    className: "underline-offset",
  },
  fontSMOOTHING: {
    values: ["antialiased", "subpixel-antialiased"],
    group: "Typography",
    title: "Font Smoothing",
    className: "antialiased",
  },
  ringWIDTH: {
    values: "number",
    group: "Effects",
    title: "Ring Width",
    className: "ring",
  },
  ringCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "Effects",
    title: "Ring Color",
    className: "ring",
  },
  ringOFFSETWIDTH: {
    values: "number",
    group: "Effects",
    title: "Ring Offset Width",
    className: "ring-offset",
  },
  ringOFFSETCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "Effects",
    title: "Ring Offset Color",
    className: "ring-offset",
  },
  divideWIDTH: {
    values: "number",
    group: "Borders",
    title: "Divide Width",
    className: "divide",
  },
  divideCOLOR: {
    values: [
      "inherit",
      "current",
      "transparent",
      "black",
      "white",
      ...colorValues,
    ],
    group: "Borders",
    title: "Divide Color",
    className: "divide",
  },
  divideSTYLE: {
    values: ["solid", "dashed", "dotted", "double", "none"],
    group: "Borders",
    title: "Divide Style",
    className: "divide",
  },
  scrollSNAP: {
    values: ["none", "x", "y", "both"],
    group: "Interactivity",
    title: "Scroll Snap",
    className: "snap",
  },
  scrollSNAPTYPE: {
    values: ["none", "x", "y", "both"],
    group: "Interactivity",
    title: "Scroll Snap Type",
    className: "snap",
  },
  scrollSNAPALIGN: {
    values: ["start", "end", "center", "align-none"],
    group: "Interactivity",
    title: "Scroll Snap Align",
    className: "snap",
  },
  touchACTION: {
    values: [
      "auto",
      "none",
      "pan-x",
      "pan-left",
      "pan-right",
      "pan-y",
      "pan-up",
      "pan-down",
      "pinch-zoom",
      "manipulation",
    ],
    group: "Interactivity",
    title: "Touch Action",
    className: "touch",
  },
  willCHANGE: {
    values: ["auto", "scroll", "contents", "transform"],
    group: "Interactivity",
    title: "Will Change",
    className: "will-change",
  },
  filterBLUR: {
    values: ["none", "sm", "md", "lg", "xl", "2xl", "3xl"],
    group: "Filters",
    title: "Blur",
    className: "blur",
  },
  filterBRIGHTNESS: {
    values: "number",
    group: "Filters",
    title: "Brightness",
    className: "brightness",
  },
  filterCONTRAST: {
    values: "number",
    group: "Filters",
    title: "Contrast",
    className: "contrast",
  },
  filterDROP_SHADOW: {
    values: ["none", "sm", "md", "lg", "xl", "2xl"],
    group: "Filters",
    title: "Drop Shadow",
    className: "drop-shadow",
  },
  filterGRAYSCALE: {
    values: ["0", "1"],
    group: "Filters",
    title: "Grayscale",
    className: "grayscale",
  },
  filterHUE_ROTATE: {
    values: "number",
    group: "Filters",
    title: "Hue Rotate",
    className: "hue-rotate",
  },
  filterINVERT: {
    values: ["0", "1"],
    group: "Filters",
    title: "Invert",
    className: "invert",
  },
  filterSATURATE: {
    values: "number",
    group: "Filters",
    title: "Saturate",
    className: "saturate",
  },
  filterSEPIA: {
    values: ["0", "1"],
    group: "Filters",
    title: "Sepia",
    className: "sepia",
  },
  wordBREAK: {
    values: ["normal", "break-all", "keep-all"],
    group: "Typography",
    title: "Word Break",
    className: "break",
  },
};

export const tailwindGroupsPriority: { [key: string]: number } = {
  Layout: 0,
  Typography: 0,
  Spacing: 1,
  Flexbox: 1,
  "Flexbox Grid": 1,
  Grid: 2,
  Borders: 2,
  Colors: 2,
  Backgrounds: 2,
  Effects: 3,
  Transforms: 3,
  Transitions: 3,
  Interactivity: 3,
  SVG: 4,
  Filters: 4,
  Animation: 5,
};
