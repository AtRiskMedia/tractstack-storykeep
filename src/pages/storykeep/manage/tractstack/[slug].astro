---
import StoryKeep from "@layouts/StoryKeep.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import TractStackEditor from "@components/storykeep/components/TractStackEditor";
import { getSetupChecks } from "../../../../utils/setupChecks";
import { getTractStackBySlug } from "../../../../api/turso";
import { ulid } from "ulid";
import type { AuthStatus, MenuDatum, TractStackDatum } from "../../../../types";

const { slug } = Astro.params;
const create = slug === "create";

// confirm set-up
const { hasConcierge, hasTurso, hasBranding, hasContent } = getSetupChecks();
if (!hasConcierge || !hasTurso || !hasBranding || !hasContent) {
  return Astro.redirect("/storykeep");
}

const user = Astro.locals.user as AuthStatus;
const canonicalURL = new URL(`/storykeep/manage/tractstack/${slug}`, Astro.site)
  .href;

let tractstack: TractStackDatum | undefined = undefined;

if (create) {
  tractstack = {
    id: ulid(),
    title: "",
    slug: "",
    socialImagePath: "",
  };
} else {
  if (!slug) return Astro.redirect("/404");
  const tractstacks = await getTractStackBySlug(slug);
  tractstack = tractstacks?.at(0);
}
if (!tractstack) return Astro.redirect("/404");

const menuPayload: MenuDatum = {
  id: `storykeep`,
  title: "Story Keep Menu",
  theme: "default",
  optionsPayload: [
    {
      name: "Dashboard",
      description: "Your Story Keep Dashboard",
      featured: true,
      actionLisp: "(goto (storykeep dashboard))",
      to: "/storykeep",
      internal: true,
    },
    {
      name: "Logout",
      description: "Close this session",
      featured: true,
      actionLisp: "(goto (storykeep logout))",
      to: "/storykeep/logout",
      internal: true,
    },
  ],
};
---

<StoryKeep
  title={create
    ? "Create New TractStack"
    : `Edit TractStack: ${tractstack.title}`}
  canonicalURL={canonicalURL}
>
  <Header
    title={create
      ? "Create New TractStack"
      : `Edit TractStack: ${tractstack.title}`}
    menu={menuPayload}
    slug={`storykeep-manage-tractstack-${slug}`}
    isContext={false}
    user={user}
    isStoryKeep={true}
    isEditable={false}
  />
  <main id="main-content" class="min-h-screen">
    <div class="px-1.5 pt-1.5 pb-0 pr-0 pl-1.5 py-1.5">
      <div class="py-1.5 bg-white px-3.5">
        <TractStackEditor tractstack={tractstack} create={create} client:load />
      </div>
    </div>
  </main>
  <Footer
    menu={menuPayload}
    backToTop={true}
    slug={`storykeep-manage-tractstack-${slug}`}
    isContext={false}
  />
</StoryKeep>
